name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt

      - name: Run tests
        run: |
          # Add your test command here
          echo "Running tests..."

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra/terraform

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1
        run: terraform plan
        working-directory: ./infra/terraform

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1
        run: terraform apply -auto-approve
        working-directory: ./infra/terraform

      - name: Get EC2 Public IP
        id: ec2_ip
        run: |
          cd ./infra/terraform
          terraform output -raw instance_public_ip > ec2_ip.txt

      - name: Load EC2 IP
        run: |
          EC2_IP=$(grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' ./infra/terraform/ec2_ip.txt | head -n 1)
          echo $EC2_IP
          echo "EC2_HOST=$EC2_IP" >> $GITHUB_ENV

      - name: Copy API to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./api/
          target: ~/cloudfit-devops/api

      - name: Install dependencies and run API
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo yum update -y || sudo apt update -y
            sudo yum install -y python3 python3-pip || sudo apt install -y python3 python3-pip
            pip3 install -r ~/cloudfit-devops/api/requirements.txt
            pkill -f app.py || true
            nohup python3 ~/cloudfit-devops/api/src/app.py &